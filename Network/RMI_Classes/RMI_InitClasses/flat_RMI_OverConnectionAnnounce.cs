// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>
using Network.RMI_Common.RMI_ParsingClasses;
using FlatBuffers;
using System.Collections.Generic;
using System;


namespace Network.RMI_Common.RMI_ParsingClasses
{

using global::System;
using global::FlatBuffers;

public struct flat_RMI_OverConnectionAnnounce : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static flat_RMI_OverConnectionAnnounce GetRootAsflat_RMI_OverConnectionAnnounce(ByteBuffer _bb) { return GetRootAsflat_RMI_OverConnectionAnnounce(_bb, new flat_RMI_OverConnectionAnnounce()); }
  public static flat_RMI_OverConnectionAnnounce GetRootAsflat_RMI_OverConnectionAnnounce(ByteBuffer _bb, flat_RMI_OverConnectionAnnounce obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public flat_RMI_OverConnectionAnnounce __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int MaxConnection { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<flat_RMI_OverConnectionAnnounce> Createflat_RMI_OverConnectionAnnounce(FlatBufferBuilder builder,
      int maxConnection = 0) {
    builder.StartObject(1);
    flat_RMI_OverConnectionAnnounce.AddMaxConnection(builder, maxConnection);
    return flat_RMI_OverConnectionAnnounce.Endflat_RMI_OverConnectionAnnounce(builder);
  }

  public static void Startflat_RMI_OverConnectionAnnounce(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddMaxConnection(FlatBufferBuilder builder, int maxConnection) { builder.AddInt(0, maxConnection, 0); }
  public static Offset<flat_RMI_OverConnectionAnnounce> Endflat_RMI_OverConnectionAnnounce(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<flat_RMI_OverConnectionAnnounce>(o);
  }
    public static Offset<flat_RMI_OverConnectionAnnounce> Createflat_RMI_OverConnectionAnnounce(FlatBufferBuilder builder,
 RMI_OverConnectionAnnounce data) {
        return Createflat_RMI_OverConnectionAnnounce(builder , data.maxConnection);
    }

    public static byte[] Createflat_RMI_OverConnectionAnnounce(RMI_OverConnectionAnnounce data) {
        FlatBufferBuilder fbb = new FlatBufferBuilder(512);
        fbb.Finish(flat_RMI_OverConnectionAnnounce.Createflat_RMI_OverConnectionAnnounce(fbb, data).Value);
        byte[] result = fbb.SizedByteArray();
        fbb = null;
        return result;
    }

    public static RMI_OverConnectionAnnounce GetRootAsflat_RMI_OverConnectionAnnounce(byte[] data) {
        return new RMI_OverConnectionAnnounce(flat_RMI_OverConnectionAnnounce.GetRootAsflat_RMI_OverConnectionAnnounce( new ByteBuffer(data) ) );
    }
}};